@echo off
echo ========================================
echo    TEST REALTIME CONNECTION (WINDOWS)
echo ========================================
echo.

echo üß™ ƒêang test k·∫øt n·ªëi Real-time...
echo.

REM Ki·ªÉm tra backend c√≥ ch·∫°y kh√¥ng
echo üì° Ki·ªÉm tra Backend (port 5000)...
curl -s http://localhost:5000/health >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Backend ƒëang ch·∫°y t·∫°i http://localhost:5000
) else (
    echo ‚ùå Backend kh√¥ng ch·∫°y ho·∫∑c kh√¥ng ph·∫£n h·ªìi
    echo Vui l√≤ng ch·∫°y backend tr∆∞·ªõc: start.bat
    echo.
    pause
    exit /b 1
)

echo.

REM Ki·ªÉm tra frontend c√≥ ch·∫°y kh√¥ng
echo üé® Ki·ªÉm tra Frontend (port 3000)...
curl -s http://localhost:3000 >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Frontend ƒëang ch·∫°y t·∫°i http://localhost:3000
) else (
    echo ‚ùå Frontend kh√¥ng ch·∫°y ho·∫∑c kh√¥ng ph·∫£n h·ªìi
    echo Vui l√≤ng ch·∫°y frontend: start.bat
    echo.
)

echo.

REM Test Socket.io connection
echo üîå Test Socket.io connection...
cd ..\..\backend
node -e "
const io = require('socket.io-client');
console.log('üîç Testing Socket.io connection...');
const socket = io('http://localhost:5000', {
  transports: ['websocket', 'polling'],
  timeout: 5000
});

socket.on('connect', () => {
  console.log('‚úÖ Socket.io connection successful!');
  console.log('üîå Socket ID:', socket.id);
  socket.disconnect();
  process.exit(0);
});

socket.on('connect_error', (error) => {
  console.error('‚ùå Socket.io connection failed:', error.message);
  process.exit(1);
});

setTimeout(() => {
  console.error('‚è∞ Socket.io connection timeout');
  process.exit(1);
}, 10000);
"
cd ..\scripts\debug

echo.
echo üéØ K·∫æT QU·∫¢ TEST:
echo - N·∫øu th·∫•y "‚úÖ Socket.io connection successful!" = K·∫øt n·ªëi OK
echo - N·∫øu th·∫•y "‚ùå Socket.io connection failed" = C√≥ l·ªói k·∫øt n·ªëi
echo - N·∫øu th·∫•y "‚è∞ Socket.io connection timeout" = Backend kh√¥ng ph·∫£n h·ªìi
echo.

pause
